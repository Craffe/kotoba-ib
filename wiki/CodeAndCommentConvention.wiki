#summary Эта страница содержит соглашения и рекомендации относительно оформления кода, написания комментариев, именования функций, переменных и т.д.
#labels code,comment,convention

= Введение =

Чтобы код и документация Котобы была выдержана в едином стиле, чтобы интерфейсы не выглядели как суп "из того что было", в Котобе принят ряд соглашений относительно именования функций, классов, переменных, и т.д., а так же комментирования и оформления кода. Соглашения оформлены в виде *правил* и *рекомендаций*, к правилам и рекомендациям приведены *примеры* с комментариями. Комментарии к примерам, так же как и сами правила и рекомендации, могут содержать важную информацию, которая (пока ещё) не оформлена в виде правил или рекомендаций.


= Часть 1. Функции работы с сущностями =

В комментариях к функциям работы с сущностями, а так же при именовании этих
функций и их аргументов будем следовать следующим правилам:

*1.* Если функция удаляет, редактирует или получает/выбирает один или более экземпляров сущности по одному или более атрибуту сущности, то в описании функции не нужно перечислять все эти атрибуты, а лишь обозначить их словом "заданную". В качестве имён аргументов функции берутся имена атрибутов сущности, по которым выполняется действие. Имя функции строится по следующему правилу:

`сущность_действие[_уточнение][_filtred][_by_атрибут[_атрибут]]()`

Примеры уточнений: `all`, `visible`, `first`, `last`, `count`.

== Примеры ==

==== 1 ====
{{{ 
/**
 * Удаляет заданную нить.
 * @param id mixed <p>Идентификатор.</p>
 */
function threads_delete_by_id($id) { ... }
}}}
Подробно функцию можно описать так: Удаляет нить по заданному идентификатору *id* нити.
Поскольку атрибут *id* нити является родным атрибутом нити, то в качестве его имени берётся имя атрибута.

Здесь:
 * *threads* - имя сущности.
 * *delete* (Удаляет) - действие, которое функция осуществляет с одним или более экземпляром сущности.
 * *id* - атрибут, по значению которого осуществляется действие.
 * *Нить* - имя экземпляра сущности.
==== 2 ====
{{{ 
/**
 * Редактирует специфичный для нити бамплимит заданных нитей.
 * @param boards array <p>Идентификаторы досок.</p>
 * @param bump_limit mixed <p>Бамплимит.</p>
 */
function threads_edit_bump_limit_by_boards($boards, $bump_limit) { ... }
}}}
Подробно функцию можно описать так: Редактирует специфичный для нити бамплимит у всех нитей принадлежащих доскам, идентификаторы которых перечислены в массиве *boards*, устанавливая значение специфичного для нити бамплимита в *bump_limit*. Атрибут *Идентификатор доски* является родным атрибутом доски, поэтому его имя как атрибута сущности нить выбрано в виде `Атрибут сущность`, где сущность - доска.

Здесь:
 * *threads* - имя сущности.
 * *edit* (Редактирует) - действие, которое функция осуществляет с одним или более экземпляром сущности.
 * *boards* - массив значений атрибута board (нить имеет атрибут board), по которым осуществляется действие.
 * *Нить* - имя экземпляра сущности.
==== 3 ====
Функция может выполнять действие не только по атрибуту сущности, с которой она работает, но и по атрибутам других сущностей, которые с ним связаны. В этом случае так же справедливо правило 1. Именовать аргумент для хранения значения атрибута, по которому выполняется действие, нужно полностью: `сущность_атрибут`:
{{{ 
/**
 * Редактирует специфичный для нити бамплимит заданных нитей.
 * @param board_names array <p>Имена досок.</p>
 * @param bump_limit mixed <p>Бамплимит.</p>
 */
function threads_edit_bump_limit_by_boards($board_names, $bump_limit) { ... }
}}}
Подробно функцию можно описать так: Редактирует специфичный для нити бамплимит у всех нитей принадлежащих доскам, имена которых перечислены в массиве *board_names*, устанавливая значение специфичного для нити бамплимита в *bump_limit*.

Здесь:
 * *threads* - имя сущности.
 * *edit* (Редактирует) - действие, которое функция осуществляет с одним или более экземпляром сущности.
 * *board_names* - массив значений атрибута name (доска имеет атрибут name), по которым осуществляется действие. Нить имеет атрибут идентификатор доски, по которому можно определить значение атрибута имя доски.
 * *Нить* - имя экземпляра сущности.
==== 4 ====
Функция может выполнять сложное действие с экземплярами сущностей, которое выполняется не по атрибутам сущности или не только по ним, в этом случае функция использует функцию, в частности лямбда функцию, которая будет применяется к экземплярам сущности, чтобы выполнить с ними требуемое действие.
{{{
/**
 * Получает отфильтрованные нити.
 * @param filter object <p>Фильтр (лямбда функция).</p>
 */
function threads_get_filtred($filter) { ... }
}}}
{{{
/**
 * Такой фильтр может быть применён к выбранным нитям, чтобы пропустить первые
 * 10 из них.
 */
$filter = function () { static $i = 0; while($i++ < 10) return false; return true;  }
}}}